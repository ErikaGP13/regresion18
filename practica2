#instalacion de la libreria ggplot2
install.packages("ggplot2")
#Apertura de librerias
library("ggplot2")
require(ggplot2)
#creacion de la matriz
X<-c(.4,.42,.48,.51,.57,.60,.70,.75,.75,.78,.84,.95,.99,1.03,1.12,1.15,1.20,1.25,1.25,1.28,1.30,1.34,1.37
     ,1.40,1.43,1.46,1.49,1.55,1.58,1.60)
Y<-c(1.02,1.21,.88,.98,1.52,1.83,1.50,1.80,1.74,1.63,2.00,2.80,2.48,2.47,3.05,3.18,3.76,3.68,3.82,3.21,4.27
     ,3.12,3.99,3.75,4.10,4.18,3.77,4.34,4.21,4.92)

dataf1<-data.frame(X,Y)
dataf1

pdf("grafico1.pdf")
ggplot(dataf1, aes(x=X,y=Y))+geom_point()+ggtitle("Diagrama de Dispersion")+xlab("Variable independiente X")+
  ylab("Variable dependiente Y")+geom_smooth(method = lm)
dev.off()
##1
## A) Tipo de relación: Positiva
## B) Identificar "outliers"
pdf("Grafico2.pdf")
num.outliers<-2

##Ordenamos los datos de mayor a menor distancia segun la metrica de Mahalanobis
mah.ordenacion <- order(mahalanobis(dataf1 , colMeans(dataf1), cov(dataf1))
                        , decreasing=TRUE)
outlier2<-rep(FALSE,nrow(dataf1))
##Generamos un vector boleano de los dos valores mas alejados segun la distancia de Mahalanobis
outlier2[mah.ordenacion[1:num.outliers]]<-TRUE
colorear.outlier<-outlier2*16

plot(dataf1, pch=0,main="Outliders Identificados")+points(dataf1, pch=colorear.outlier)
dev.off()

## C) Fuerza de la Relación: Alta
## D) Eliminar "outliers" identificados
pdf("Grafico3.pdf")
Grafico_sin_outliders<-dataf1[-c(22,21),]
ggplot(Grafico_sin_outliders, aes(x=X,y=Y))+geom_point()+ggtitle("Diagrama de Dispersion sin outliders")+
  xlab("Variable independiente X")+
  ylab("Variable dependiente Y")+geom_smooth(method = lm)

dev.off()
